{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","position","setPosition","isLastPosition","length","isPrevDisabled","isNextDisabled","className","style","width","map","image","transform","transition","src","alt","type","onClick","disabled","Form","setStep","setFrameSize","setItemWidth","setAnimationDuration","setInfinite","htmlFor","id","value","min","max","onChange","event","currentTarget","checked","target","App","ReactDOM","render","document","getElementById"],"mappings":"2OA2FeA,EAvFmB,SAAC,GAO5B,IANLC,EAMI,EANJA,OACAC,EAKI,EALJA,KACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,SAEA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAiBT,EAAOU,OAASR,EACjCS,EAAkBN,GAAYH,IAAcF,EAAOU,QACtC,IAAbH,IAAmBF,EACnBO,EAAkBP,GAAYH,IAAcF,EAAOU,QACnDH,IAAaE,IAAmBJ,EA0BtC,OACE,sBACEQ,UAAU,WACVC,MAAO,CAAEC,MAAM,GAAD,OAAKZ,EAAYD,EAAjB,OAFhB,UAIE,oBAAIW,UAAU,iBAAd,SACGb,EAAOgB,KAAI,SAACC,GAAD,OACV,oBAEEJ,UAAU,iBACVC,MAAO,CACLI,UAAU,cAAD,QAAiBX,EAAWJ,EAA5B,OACTgB,WAAW,aAAD,OAAef,EAAf,OALd,SAQE,qBACEgB,IAAKH,EACLI,IAAKJ,EACLF,MAAOZ,KAVJc,QAgBX,sBAAKJ,UAAU,oBAAf,UACE,wBACES,KAAK,SACLT,UAAU,mBACVU,QAxCiB,WAErBf,EADED,EAAWN,EAAO,EACRM,EAAWN,EAEX,GAGVI,GAAyB,IAAbE,GACdC,EAAYC,IAiCRe,SAAUb,EAJZ,kBAQA,wBACEW,KAAK,SACLT,UAAU,mBACVU,QA5DiB,WAErBf,EADED,EAAWN,EAAOQ,EACRF,EAAWN,EAEXQ,GAGVJ,GAAYE,IAAaE,GAC3BD,EAAY,IAqDRgB,SAAUZ,EACV,UAAQ,OALV,yBCOOa,G,MAhFiB,SAAC,GAAD,IAC9BzB,EAD8B,EAC9BA,OACAC,EAF8B,EAE9BA,KACAyB,EAH8B,EAG9BA,QACAxB,EAJ8B,EAI9BA,UACAyB,EAL8B,EAK9BA,aACAxB,EAN8B,EAM9BA,UACAyB,EAP8B,EAO9BA,aACAxB,EAR8B,EAQ9BA,kBACAyB,EAT8B,EAS9BA,qBACAxB,EAV8B,EAU9BA,SACAyB,EAX8B,EAW9BA,YAX8B,OAa9B,uBAAMjB,UAAU,OAAhB,UACE,wBAAOA,UAAU,cAAckB,QAAQ,SAAvC,kBAGE,uBACEC,GAAG,SACHC,MAAOhC,EACPiC,IAAK,EACLC,IAAKnC,EAAOU,OAASR,EACrBoB,KAAK,SACLT,UAAU,cACVuB,SAAU,SAACC,GAAD,OAAWX,GAASW,EAAMC,cAAcL,aAGtD,wBAAOpB,UAAU,cAAckB,QAAQ,UAAvC,wBAGE,uBACEC,GAAG,UACHC,MAAO/B,EACPgC,IAAK,EACLC,IAAKnC,EAAOU,OACZY,KAAK,SACLT,UAAU,cACVuB,SAAU,SAACC,GAAD,OAAWV,GAAcU,EAAMC,cAAcL,aAG3D,wBAAOpB,UAAU,cAAckB,QAAQ,SAAvC,wBAGE,uBACEC,GAAG,SACHC,MAAO9B,EACP+B,IAAK,GACLjC,KAAM,GACNqB,KAAK,SACLT,UAAU,cACVuB,SAAU,SAACC,GAAD,OAAWT,GAAcS,EAAMC,cAAcL,aAG3D,wBAAOpB,UAAU,cAAckB,QAAQ,sBAAvC,gCAGE,uBACEC,GAAG,sBACHC,MAAO7B,EACP8B,IAAK,EACLjC,KAAM,IACNqB,KAAK,SACLT,UAAU,cACVuB,SAAU,SAACC,GAAD,OAAWR,GAAsBQ,EAAMC,cAAcL,aAGnE,wBAAOpB,UAAU,cAAckB,QAAQ,aAAvC,sBAGE,uBACEC,GAAG,aACHV,KAAK,WACLT,UAAU,cACV0B,QAASlC,EACT+B,SAAU,SAACC,GAAD,OAAWP,EAAYO,EAAMG,OAAOD,oBCzEhDvC,EAAS,CACb,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAyCayC,EAtCO,WACpB,MAAwBnC,mBAAS,GAAjC,mBAAOL,EAAP,KAAayB,EAAb,KACA,EAAkCpB,mBAAS,GAA3C,mBAAOJ,EAAP,KAAkByB,EAAlB,KACA,EAAkCrB,mBAAS,KAA3C,mBAAOH,EAAP,KAAkByB,EAAlB,KACA,EAAkDtB,mBAAS,KAA3D,mBAAOF,EAAP,KAA0ByB,EAA1B,KACA,EAAgCvB,oBAAS,GAAzC,mBAAOD,EAAP,KAAiByB,EAAjB,KAEA,OACE,sBAAKjB,UAAU,MAAf,UAEE,qBAAI,UAAQ,QAAZ,2BAAmCb,EAAOU,OAA1C,aAEA,cAAC,EAAD,CACEV,OAAQA,EACRC,KAAMA,EACNyB,QAASA,EACTxB,UAAWA,EACXyB,aAAcA,EACdxB,UAAWA,EACXyB,aAAcA,EACdxB,kBAAmBA,EACnByB,qBAAsBA,EACtBxB,SAAUA,EACVyB,YAAaA,IAGf,cAAC,EAAD,CACE9B,OAAQA,EACRC,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,QC/ClBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.11f2f81b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Props } from '../../types/Types';\nimport './Carousel.scss';\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(0);\n\n  const isLastPosition = images.length - frameSize;\n  const isPrevDisabled = (infinite && frameSize === images.length)\n    || (position === 0 && !infinite);\n  const isNextDisabled = (infinite && frameSize === images.length)\n    || (position === isLastPosition && !infinite);\n\n  const handleButtonNext = () => {\n    if (position + step < isLastPosition) {\n      setPosition(position + step);\n    } else {\n      setPosition(isLastPosition);\n    }\n\n    if (infinite && position === isLastPosition) {\n      setPosition(0);\n    }\n  };\n\n  const handleButtonPrev = () => {\n    if (position - step > 0) {\n      setPosition(position - step);\n    } else {\n      setPosition(0);\n    }\n\n    if (infinite && position === 0) {\n      setPosition(isLastPosition);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{ width: `${itemWidth * frameSize}px` }}\n    >\n      <ul className=\"Carousel__list\">\n        {images.map((image) => (\n          <li\n            key={image}\n            className=\"Carousel__item\"\n            style={{\n              transform: `translateX(${-position * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={image}\n              alt={image}\n              width={itemWidth}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"Carousel__buttons\">\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleButtonPrev}\n          disabled={isPrevDisabled}\n        >\n          Prev\n        </button>\n        <button\n          type=\"button\"\n          className=\"Carousel__button\"\n          onClick={handleButtonNext}\n          disabled={isNextDisabled}\n          data-cy=\"next\"\n        >\n          Next\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport { SetForm } from '../../types/Types';\nimport './Form.scss';\n\nconst Form: React.FC<SetForm> = ({\n  images,\n  step,\n  setStep,\n  frameSize,\n  setFrameSize,\n  itemWidth,\n  setItemWidth,\n  animationDuration,\n  setAnimationDuration,\n  infinite,\n  setInfinite,\n}) => (\n  <form className=\"Form\">\n    <label className=\"Form__label\" htmlFor=\"stepId\">\n      Step:\n\n      <input\n        id=\"stepId\"\n        value={step}\n        min={1}\n        max={images.length - frameSize}\n        type=\"number\"\n        className=\"Form__input\"\n        onChange={(event) => setStep(+event.currentTarget.value)}\n      />\n    </label>\n    <label className=\"Form__label\" htmlFor=\"frameId\">\n      Frame size:\n\n      <input\n        id=\"frameId\"\n        value={frameSize}\n        min={1}\n        max={images.length}\n        type=\"number\"\n        className=\"Form__input\"\n        onChange={(event) => setFrameSize(+event.currentTarget.value)}\n      />\n    </label>\n    <label className=\"Form__label\" htmlFor=\"itemId\">\n      Item width:\n\n      <input\n        id=\"itemId\"\n        value={itemWidth}\n        min={10}\n        step={10}\n        type=\"number\"\n        className=\"Form__input\"\n        onChange={(event) => setItemWidth(+event.currentTarget.value)}\n      />\n    </label>\n    <label className=\"Form__label\" htmlFor=\"animationDurationId\">\n      Animation duration:\n\n      <input\n        id=\"animationDurationId\"\n        value={animationDuration}\n        min={0}\n        step={100}\n        type=\"number\"\n        className=\"Form__input\"\n        onChange={(event) => setAnimationDuration(+event.currentTarget.value)}\n      />\n    </label>\n    <label className=\"Form__label\" htmlFor=\"infiniteId\">\n      Infinite:\n\n      <input\n        id=\"infiniteId\"\n        type=\"checkbox\"\n        className=\"Form__input\"\n        checked={infinite}\n        onChange={(event) => setInfinite(event.target.checked)}\n      />\n    </label>\n  </form>\n);\n\nexport default Form;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel/Carousel';\nimport Form from './components/Form/Form';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst App: React.FC = () => {\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      {/* eslint-disable-next-line */}\n      <h1 data-cy='title'>Carousel with {images.length} images</h1>\n\n      <Form\n        images={images}\n        step={step}\n        setStep={setStep}\n        frameSize={frameSize}\n        setFrameSize={setFrameSize}\n        itemWidth={itemWidth}\n        setItemWidth={setItemWidth}\n        animationDuration={animationDuration}\n        setAnimationDuration={setAnimationDuration}\n        infinite={infinite}\n        setInfinite={setInfinite}\n      />\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}